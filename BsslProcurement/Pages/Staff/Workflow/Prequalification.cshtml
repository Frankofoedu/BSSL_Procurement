@page
@model BsslProcurement.Pages.Staff.Workflow.PrequalificationModel
@{
    ViewData["Title"] = "Prequalification Workflow";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

<div class="row my-3">
    <div class="col-md-1"></div>
    <div class="col-md-10">
        <div class="panel panel-login">
            <div class="panel-heading">
                <div class="row">
                    <p class="header-text">Current Prequalification Workflow</p>
                </div>
                <hr>
            </div>

            <div class="mt-1">
                <table class="table table-responsive-sm table-striped">
                    <thead>
                        <tr class="table-primary">
                            <th>Step</th>
                            <th>Description</th>
                            <th>For Specific<br />Staff</th>
                            <th>Staff<br /> Code</th>
                            <th>Staff<br /> Name</th>
                            <th>Alt. Staff<br /> Code</th>
                            <th>Alt. Staff<br /> Name</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.currentPrequalificationWorkflows.Count > 0)
                        {
                            for (int i = 0; i < Model.currentPrequalificationWorkflows.Count; i++)
                            {
                                var item = Model.currentPrequalificationWorkflows[i];

                                <tr>
                                    <td>@item.Step</td>
                                    <td>@item.Description</td>
                                    <td>@item.ToPersonOrAssign</td>
                                    @if (item.StaffToAssign != null)
                                    {
                                        <td>@item.StaffToAssign.StaffCode</td>
                                        <td>@item.StaffToAssign.Name</td>
                                        if (item.AlternativeStaffToAssign != null)
                                        {
                                            <td>@item.AlternativeStaffToAssign.StaffCode</td>
                                            <td>@item.AlternativeStaffToAssign.Name</td>
                                        }
                                        else
                                        {
                                            <td></td>
                                            <td></td>

                                        }
                                    }
                                    else
                                    {
                                        <td></td>
                                        <td></td>
                                    }
                                </tr>
                            }

                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<div class="row mt-5">
    <div class="col-md-1"></div>
    <div class="col-md-10">
        <form method="post" class="panel panel-login">
            <div class="panel-heading">
                <div class="row">
                    <p class="header-text">New Prequalification Workflow</p>
                </div>
                <hr>
            </div>

            @if (!string.IsNullOrWhiteSpace(Model.Message))
            {
                <div class="alert alert-success alert-dismissable fade show">
                    <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    @Model.Message
                </div>
            }
            @if (!string.IsNullOrWhiteSpace(Model.Error))
            {
                <div class="alert alert-danger alert-dismissable fade show">
                    <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    @Model.Error
                </div>
            }

            <div asp-validation-summary="All" class="text-danger"></div>

            <div class="mt-1">
                <table class="table table-responsive-sm table-striped">
                    <thead>
                        <tr class="table-primary">
                            <th>Step</th>
                            <th>Description</th>
                            <th>For Specific<br />Staff</th>
                            <th>Staff<br /> Code</th>
                            <th>Staff<br /> Name</th>
                            <th>Alt. Staff<br /> Code</th>
                            <th>Alt. Staff<br /> Name</th>
                        </tr>
                    </thead>
                    <tbody id="workflowTbody">
                        @if (Model.InputModel == null)
                        {
                            for (int i = 0; i < 1; i++)
                            {
                                <tr>
                                    <td>@(i + 1) <input type="hidden" asp-for="InputModel[i].Step" value="@(i+1)" /></td>
                                    <td><input type="text" asp-for="InputModel[i].Description" class="form-control" /></td>
                                    <td><input type="checkbox" asp-for="InputModel[i].Assign" class="checkbox" /></td>
                                    <td>
                                        <input type="hidden" class="staffIdInput @("staffIdInput" + i)" asp-for="InputModel[i].StaffId" />
                                        <input type="text" sIndex="@i" class="staffCodeInput @("staffCodeInput" + i) form-control" asp-for="InputModel[i].StaffCode" />
                                    </td>
                                    <td>
                                        <input type="text" readonly="readonly" class="staffNameInput @("staffNameInput" + i)" asp-for="InputModel[i].StaffName" />
                                    </td>
                                    <td>
                                        <input type="hidden" class="AltStaffIdInput @("AltStaffIdInput" + i)" asp-for="InputModel[i].AlternativeStaffId" />
                                        <input type="text" sIndex="@i" class="AltStaffCodeInput @("AltStaffCodeInput" + i) form-control" asp-for="InputModel[i].AlternativeStaffCode" />
                                    </td>
                                    <td>
                                        <input type="text" readonly="readonly" class="AltStaffNameInput @("AltStaffNameInput" + i)" asp-for="InputModel[i].AlternativeStaffName" />
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            for (int i = 0; i < Model.InputModel.Count; i++)
                            {
                                var item = Model.InputModel[i];

                                <tr>
                                    <td>@(i + 1) <input type="hidden" asp-for="InputModel[i].Step" value="@item.Step" /></td>
                                    <td><input type="text" asp-for="InputModel[i].Description" value="@item.Description" class="form-control" /></td>
                                    <td><input type="checkbox" asp-for="InputModel[i].Assign" class="checkbox" /></td>

                                    <td>
                                        <input type="hidden" class="staffIdInput @("staffIdInput" + i)" asp-for="InputModel[i].StaffId" value="@item.StaffId" />
                                        <input type="text" sIndex="@i" class="staffCodeInput @("staffCodeInput" + i) form-control" asp-for="InputModel[i].StaffCode" value="@item.StaffCode" />
                                    </td>
                                    <td>
                                        <input type="text" readonly="readonly" class="staffNameInput @("staffNameInput" + i)" asp-for="InputModel[i].StaffName" value="@item.StaffName" />
                                    </td>
                                    <td>
                                        <input type="hidden" class="AltStaffIdInput @("AltStaffIdInput" + i)" asp-for="InputModel[i].AlternativeStaffId" value="@item.AlternativeStaffId" />
                                        <input type="text" sIndex="@i" class="AltStaffCodeInput @("AltStaffCodeInput" + i) form-control" asp-for="InputModel[i].AlternativeStaffCode" value="@item.AlternativeStaffCode" />
                                    </td>
                                    <td>
                                        <input type="text" readonly="readonly" class="AltStaffNameInput @("AltStaffNameInput" + i)" asp-for="InputModel[i].AlternativeStaffName" value="@item.AlternativeStaffName" />
                                    </td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>

                <input type="hidden" id="lastIndex" value="0" />

                <div class="form-group">
                    <div class="row">
                        <div class="col-sm-3"> </div>
                        <div class="col-sm-6 text-center">
                            <button id="btnMore" class="btn btn-outline-primary">New Step</button>
                            <button type="submit" class="btnSubmit btn btn-primary ml-sm-2">Save</button>
                        </div>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

<script>
    $(document).ready(function () {
        $('#workflowTbody').on('change', '.staffCodeInput', function () {

            var code = this.value;
            var sindex = this.getAttribute('sIndex');

            if (code) {

                var baseUrl = window.location.origin;

                $.ajax({
                    url: baseUrl + '/api/Codes/Staff/' + code.trim(),
                    type: 'get',
                    xhrFields: {
                        withCredentials: true
                    },
                    contentType: 'application/json',
                    error: function () {
                        alert('An Error occured.');
                        $('.staffCodeInput' + sindex).focus();
                        $('.staffIdInput' + sindex).val('');
                        $('.staffNameInput' + sindex).val('');
                    },
                    success: function (data) {
                        if (!data) {
                            alert('This staff code is invalid.');
                            $('.staffCodeInput' + sindex).focus();
                            $('.staffIdInput' + sindex).val('');
                            $('.staffNameInput' + sindex).val('');
                            return;
                        }

                        $('.staffIdInput' + sindex).val(data.id);
                        $('.staffNameInput' + sindex).val(data.name);
                    },
                });
            }
        });

         $('#workflowTbody').on('change', '.AltStaffCodeInput', function () {

            var code = this.value;
            var sindex = this.getAttribute('sIndex');

            if (code) {

                var baseUrl = window.location.origin;

                $.ajax({
                    url: baseUrl + '/api/Codes/Staff/' + code.trim(),
                    type: 'get',
                    xhrFields: {
                        withCredentials: true
                    },
                    contentType: 'application/json',
                    error: function () {
                        alert('An Error occured.');
                        $('.AltStaffCodeInput' + sindex).focus();
                        $('.AltStaffIdInput' + sindex).val('');
                        $('.AltStaffNameInput' + sindex).val('');
                    },
                    success: function (data) {
                        if (!data) {
                            alert('This staff code is invalid.');
                            $('.AltStaffCodeInput' + sindex).focus();
                            $('.AltStaffIdInput' + sindex).val('');
                            $('.AltStaffNameInput' + sindex).val('');
                            return;
                        }

                        $('.AltStaffIdInput' + sindex).val(data.id);
                        $('.AltStaffNameInput' + sindex).val(data.name);
                    },
                });
            }
         });

        $('#btnMore').on('click', function (event) {
            event.preventDefault;
            var lastIndex = $('#lastIndex').val();
            var newIndex = Number(lastIndex) + 1;

            newStepRow(newIndex);
            $('#lastIndex').val(newIndex);
            return false;
        });

        function newStepRow(index) {
            var html = ' <tr> <td>' + (Number(index) + 1) + ' <input type="hidden" id="InputModel_' + index + '__Step" name="InputModel[' + index + '].Step" value="' + (Number(index) + 1) + '" /></td > <td>' +
                '<input type="text" class="form-control"  id="InputModel_' + index + '__Description" name="InputModel[' + index + '].Description" value=""/></td>' +
                '<td><input type="checkbox" class="checkbox" data-val="true" data-val-required="The Assign field is required." id="InputModel_' + index + '__Assign" name="InputModel[' + index + '].Assign" value="true" /></td>' +
                '<td><input type="hidden" class="staffIdInput staffIdInput' + index + '" id="InputModel_' + index + '__StaffId" name="InputModel[' + index + '].StaffId" value="" />' +
                '<input type="text" sIndex="' + index + '" class="staffCodeInput staffCodeInput' + index + ' form-control" id="InputModel_' + index + '__StaffCode" name="InputModel[' + index + '].StaffCode" value="" /></td>' +
                '<td><input type="text" readonly="readonly" class="staffNameInput staffNameInput' + index + '" id="InputModel_' + index + '__StaffName" name="InputModel[' + index + '].StaffName" value="" /></td>' +
                '<td><input type="hidden" class="AltstaffIdInput AltStaffIdInput' + index + ' id="InputModel_' + index + '__AlternativeStaffId" name="InputModel[' + index + '].AlternativeStaffId" value="">'+
                '<input type="text" sindex="' + index + '" class="AltstaffCodeInput AltStaffCodeInput' + index + ' form-control" id="InputModel_' + index + '__AlternativeStaffCode" name="InputModel[' + index + '].AlternativeStaffCode" value=""></td>'+
                '<td><input type="text" readonly="readonly" class="AltStaffNameInput AltStaffNameInput' + index + '" id="InputModel_' + index + '__AlternativeStaffName" name="InputModel[' + index + '].AlternativeStaffName" value=""></td></tr > ';

            $('#workflowTbody').append(html);
        }

    });
</script>
