@page

@model BsslProcurement.Pages.Staff.ItemRequisition.NewRequisitionModel
@{
    ViewData["Title"] = "Purchase Requisition";
}

@section Styles{

    <link href="~/css/fileupload.css" rel="stylesheet" />
    <link href="~/css/site.css" rel="stylesheet" />
    <link href="~/css/quill.snow.css" rel="stylesheet" />
    <style>
        .custom-file-container {
            max-width: 400px;
        }


        .loader {
            border: 16px solid #f3f3f3;
            border-top: 16px solid #3498db;
            border-radius: 50%;
            width: 120px;
            height: 120px;
            -webkit-animation: spin 2s linear infinite;
            animation: spin 2s linear infinite;
        }

        @@keyframes spin {
            0% {
                transform: rotate(0deg);
            }

            100% {
                transform: rotate(360deg);
            }
        }

        .faRedColour {
            color: red;
        }

        .ql-editor {
            min-height: 200px;
        }

        @@media (min-width: 768px) {
            .modal-xl {
                width: 90%;
                max-width: 1200px;
            }
        }

        .del {
            cursor: pointer;
        }
    </style>
}

@if (!string.IsNullOrWhiteSpace(Model.Message))
{
    <div class="alert alert-success alert-dismissable fade show">
        <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        @Model.Message
    </div>
}
@if (!string.IsNullOrWhiteSpace(Model.Error))
{
    <div class="alert alert-danger alert-dismissable fade show">
        <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        @Model.Error
    </div>
}

@if (Model.WfVm == null)
{
    <div class="alert alert-danger alert-dismissable fade show">
        <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        Workflow Has not been setup. Please setup workflow
    </div>
}

<div class="row mt-5">
    <div class="col-md-12">
        <form id="formX" class="panel panel-login" method="post" enctype="multipart/form-data">
            <input asp-for="IsRejected" type="hidden" />
            <div class="panel-heading">
                <div class="row">
                    <p class="header-text">Purchase Requisition</p>

                </div>
                <hr>
            </div>

            <div asp-validation-summary="All" class="text-danger"></div>

            <div>
                <div class="">

                    @*<div class=" panel">
                            <div class="text-center mb-3">
                                <div class="form-group mb-0">
                                    <label class="btn btn-outline-dark pl-4">
                                        <input class="form-check-input" type="radio" checked asp-for="Requisition.ProcurementType" value="Capital Procurement">
                                        Capital Procurement
                                    </label>
                                    <label class="btn btn-outline-dark pl-4">
                                        <input class="form-check-input" type="radio" asp-for="Requisition.ProcurementType" value="Recurrent Procurement">
                                        Recurrent Procurement
                                    </label>
                                </div>
                            </div>
                        </div>*@
                    <div class="row p-2">
                        <div class="col-sm-4">
                            <div class="form-group">
                                <label>PR No : </label>
                                <input class="form-control prnumberInput" readonly asp-for="Requisition.PRNumber"
                                       value="@(Model.Requisition != null ? Model.Requisition.PRNumber :  "")" placeholder="" />
                            </div>
                        </div>
                        <div class="col-sm-4">
                            <div class="form-group">
                                <label>PR Date : </label>
                                @*<input class="form-control" data-date="date" data-id="Rdate" />*@
                                <input class="form-control" data-date="date" data-id="Rdate" value=@(Model.Requisition != null ? Model.Requisition.Date.Value.ToShortNigeriaDateString() : null) />
                                <input asp-for="Requisition.Date" type="hidden" data-id="Rdate" />

                            </div>
                        </div>

                        <input asp-for="Requisition.DateCreated" type="hidden" />
                        <input id="userCodeInput" value="@Model.UserCode" type="hidden" />

                        <div class="col-sm-4">
                            <div class="form-group">
                                <label>Expected Delivery Date : </label>

                                <input class="form-control" data-date="date" data-id="Deliverydate" value=@(Model.Requisition != null ? Model.Requisition.DeliveryDate.Value.ToShortNigeriaDateString() : null) />
                                <input type="hidden" data-id="Deliverydate" asp-for="Requisition.DeliveryDate" />
                            </div>
                        </div>
                        <div class="col-sm-12">
                            <div class="form-group">
                                <label>Requesting :</label>
                                <div class="panel border border-dark rounded p-2">
                                    <div class="row">
                                        <div class="col-sm-6">
                                            <div class="form-group mb-0">
                                                <label class="btn btn-outline-dark"><input type="radio" checked asp-for="Requisition.RequesterType" value="Department" /> Department</label>
                                                <label class="btn btn-outline-dark"><input type="radio" asp-for="Requisition.RequesterType" value="Division" /> Division</label>
                                                <label class="btn btn-outline-dark"><input type="radio" asp-for="Requisition.RequesterType" value="Section" /> Section</label>
                                                <label class="btn btn-outline-dark"><input type="radio" asp-for="Requisition.RequesterType" value="Unit" /> Unit</label>
                                            </div>
                                        </div>
                                        <div class="col-sm-6">
                                            <div class="form-group mb-0">
                                                <input readonly type="text" class="requesterCode form-control-sm" asp-for="Requisition.RequesterCode" value="@(Model.Requisition != null ? Model.Requisition.RequesterCode : "")" />
                                                <button id="btnRequester" class="btn btn-default btn-sm"><i class="fas fa-search"></i></button>
                                                <input class="requesterValue form-control-sm" readonly asp-for="Requisition.RequesterValue" value="@(Model.Requisition != null ? Model.Requisition.RequesterValue : "")" placeholder="Enter Department" />
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>


                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label>Delivery Destination : </label>
                                <select curDept="@(Model.Requisition != null ? Model.Requisition.RequiredAtDepartment : "")"
                                        asp-for="Requisition.RequiredAtDepartment" class="form-control departmentInput">
                                    <option value="">--Select a Department--</option>
                                </select>
                            </div>
                        </div>

                        <div class="col-sm-12">
                            <div class="form-group">
                                <label>Request Description : </label>
                                <textarea asp-for="Requisition.Description" class="form-control" rows="5" placeholder="e.g Request for Consumable Items for office Use"></textarea>
                            </div>
                        </div>
                        <div class="mt-3 mb-5 col-sm-12 table-responsive">
                            <table class="table table-striped">
                                <thead>
                                    <tr class="table-primary">
                                        <th>Description Of <br />Goods/Services <i class="fa fa-asterisk fa-xs faRedColour"></i></th>
                                        <th>Quantity <i class="fa fa-asterisk fa-xs faRedColour"></i></th>
                                        <th>Unit Of<br />Measurement</th>
                                        <th>Attach Supporting File</th>
                                        <th>Action</th>
                                    </tr>
                                </thead>
                                <tbody id="requisitionBody">

                                    @if (Model.gridVm != null && Model.gridVm.Count > 0)
                                    {

                                        @for (int i = 0; i < Model.gridVm.Count; i++)
                                        {
                                            var gridItem = Model.gridVm[i];

                                            <tr class="@("row" + i)">
                                                <td>
                                                    <input type="hidden" value="@i" name="gridVm.Index" />
                                                    <input type="hidden" asp-for="gridVm[i].RequisitionItem.Id" />
                                                    <input type="hidden" asp-for="gridVm[i].RequisitionItem.RequisitionId" />
                                                    <input type="text" required asp-for="gridVm[i].RequisitionItem.Description" />
                                                </td>
                                                <td>
                                                    <input type="number" required oninput="this.value=this.value.replace(/[^0-9]/g,'');" asp-for="gridVm[i].RequisitionItem.Quantity" />

                                                </td>
                                                <td>
                                                    <div class="d-flex flex-row">
                                                        <input type="text" readonly required data-value="forUOM @i" asp-for="gridVm[i].RequisitionItem.UnitOfMeasurement" />

                                                        <button class="btn loadUOMModal ml-1" value="forUOM @i" data-toggle="modal" data-target="#uomModal"><i class="fa fa-search"></i></button>
                                                    </div>
                                                </td>

                                                <td>
                                                    <div class="d-flex flex-row">
                                                        @if (gridItem.Attachment != null)
                                                        {
                                                            <span class="attachexist @i">
                                                                @{var path = $"Attachment/{gridItem.Attachment.FileName}";}
                                                                <partial name="~/Pages/Shared/Modals/_AttachmentViewPartial.cshtml" model="path" />
                                                                <button data-preview="@i" data-url="@path" class="btnPreviewItemAttachment">View File</button>
                                                                <input type="hidden" asp-for="gridVm[i].isAttachmentChanged" value="True" />
                                                                <label class="del ml-1 @i" title="Delete Attachment" onclick="deleteAttachment(@i);">
                                                                    <i class="fa fa-trash-alt"></i>
                                                                </label>
                                                            </span>
                                                            <span hidden class="attachnoexist @i">
                                                                <input type="hidden" asp-for="gridVm[i].AttachmentId" />
                                                                <input asp-for="gridVm[i].Attachment" data-attachment="@i" accept=".pdf" class="fileItem" />
                                                                <button data-preview="@i" class="btnPreviewItemAttachment">Preview</button>
                                                            </span>
                                                        }
                                                        else
                                                        {

                                                            <input asp-for="gridVm[i].Attachment" data-attachment="@i" accept=".pdf" class="fileItem" />
                                                            <button data-preview="@i" hidden class="btnPreviewItemAttachment">Preview</button>
                                                            <button data-remove="@i" hidden class="btnRemoveFile btn btn-outline-danger"><i class="fa fa-times"></i></button>
                                                        }
                                                    </div>
                                                </td>
                                                <td>
                                                    <label class="del" reqId="@gridItem.RequisitionItem.Id" delRow="@(i)">
                                                        <i class="fa fa-trash-alt"></i>
                                                    </label>
                                                </td>

                                            </tr>
                                        }



                                    }
                                    else
                                    {
                                        <tr class="row0">
                                            <td>
                                                <input type="hidden" value="0" name="gridVm.Index" />
                                                <input type="text" required asp-for="gridVm[0].RequisitionItem.Description" />
                                            </td>
                                            <td>
                                                <input type="number" required oninput="this.value=this.value.replace(/[^0-9]/g,'');" asp-for="gridVm[0].RequisitionItem.Quantity" />

                                            </td>
                                            <td>
                                                <div class="d-flex flex-row">
                                                    <input type="text" readonly required data-value="forUOM 0" asp-for="gridVm[0].RequisitionItem.UnitOfMeasurement" />

                                                    <button class="btn loadUOMModal ml-1" value="forUOM 0" data-toggle="modal" data-target="#uomModal"><i class="fa fa-search"></i></button>
                                                </div>
                                            </td>
                                            <td>
                                                <div class="d-flex flex-row">
                                                    <input asp-for="gridVm[0].Attachment" data-attachment="0" accept=".pdf" class="fileItem" />
                                                    <button data-preview="0" hidden class="btnPreviewItemAttachment">Preview</button>
                                                    <button data-remove="0" hidden class="btnRemoveFile btn btn-outline-danger"><i class="fa fa-times"></i></button>
                                                </div>
                                            </td>
                                            <td>
                                                <label class="del" delRow="0">
                                                    <i class="fa fa-trash-alt"></i>
                                                </label>
                                            </td>

                                        </tr>

                                    }

                                </tbody>
                            </table>
                            @if (Model.gridVm != null)
                            {
                                <input type="hidden" id="lastIndex" value="@Model.gridVm.Count" />
                            }
                            else
                            {
                                <input type="hidden" id="lastIndex" value="0" />
                            }

                            <div class="form-group">
                                <div class="row">
                                    <div class="col-sm-3"> </div>
                                    <div class="col-sm-6 text-center">
                                        <button id="btnMore" class="btn btn-outline-primary">New Item</button>
                                    </div>
                                </div>
                            </div>
                        </div>


                        <div class="col-sm-6">

                            <div class="row">
                                <div class="my-2">
                                    <div class="col-sm-12">
                                        <label>Prepared By : </label>
                                        <span class="d-flex flex-row">
                                            <input id="txtprepared" asp-for="Requisition.PreparedBy" class="form-control" readonly rows="6" placeholder="" />
                                            <button class="btn loadStaffModal ml-1" value="txtprepared" data-toggle="modal" data-target="#staffModal"><i class="fa fa-search"></i></button>
                                        </span>
                                    </div>
                                    <div class="col-sm-12">
                                        <label>Designation : </label>
                                        <span class="d-flex flex-row">
                                            <input class="form-control" asp-for="Requisition.PreparedByRank" readonly id="txtpreparedRank" rows="6" placeholder="" />
                                        </span>
                                    </div>
                                </div>
                            </div>
                            @*<div class="custom-file-container" data-upload-id="myUniqueUploadId">
                <label>
                    Attach Multiple Files <a href="javascript:void(0)" class="custom-file-container__image-clear"
                                             title="Clear Image">&times;</a>
                </label>
                <label class="custom-file-container__custom-file">
                    <input type="file" name="files" class="custom-file-container__custom-file__custom-file-input" accept="*" multiple
                           aria-label="Choose File">
                    <input type="hidden" name="MAX_FILE_SIZE" value="10485760" />
                    <span class="custom-file-container__custom-file__custom-file-control"></span>
                </label>
                <div class="custom-file-container__image-preview"></div>
            </div>*@
                        </div>

                        <div class="col-sm-6">
                            <div class="row">
                                <div class="my-2">
                                    <div class="col-12">
                                        <label>Prepared For : </label>
                                    </div>
                                    <div class="col-12 justify-content-center">
                                        @if (Model.Requisition == null)
                                        {
                                            <label class="btn btn-outline-dark"><input type="radio" class="btnPreparedForType" checked asp-for="Requisition.PreparedForType" value="Staff" /> Staff</label>
                                            <label class="btn btn-outline-dark"><input type="radio" class="btnPreparedForType" asp-for="Requisition.PreparedForType" value="Project" /> Project</label>
                                        }
                                        else if (Model.Requisition.PreparedForType == "Staff")
                                        {
                                            <label class="btn btn-outline-dark"><input type="radio" class="btnPreparedForType" checked asp-for="Requisition.PreparedForType" value="Staff" /> Staff</label>
                                            <label class="btn btn-outline-dark"><input type="radio" class="btnPreparedForType" asp-for="Requisition.PreparedForType" value="Project" /> Project</label>
                                        }
                                        else
                                        {
                                            <label class="btn btn-outline-dark"><input type="radio" class="btnPreparedForType" asp-for="Requisition.PreparedForType" value="Staff" /> Staff</label>
                                            <label class="btn btn-outline-dark"><input type="radio" class="btnPreparedForType" checked asp-for="Requisition.PreparedForType" value="Project" /> Project</label>
                                        }
                                    </div>
                                    <div class="col-sm-12">
                                        <label>Name : </label>
                                        <span class="d-flex flex-row">
                                            <input class="form-control" asp-for="Requisition.PreparedFor" readonly id="forStaffText" rows="6" placeholder="" />
                                            <button class="btn loadStaffModal ml-1" value="forStaffText" data-toggle="modal" data-target="#staffModal"><i class="fa fa-search"></i></button>
                                        </span>

                                    </div>
                                    <div class="col-sm-12" id="designationDiv">
                                        <label>Designation : </label>
                                        <span class="d-flex flex-row">
                                            <input class="form-control" asp-for="Requisition.PreparedForRank" readonly id="forStaffTextRank" rows="6" placeholder="" />
                                        </span>
                                    </div>
                                </div>

                            </div>
                        </div>

                        <div class="col-sm-12">
                            <div class="form-group">
                                <label>Justification : </label>
                                <input type="hidden" asp-for="Requisition.Purpose" />
                                <div id="editor">
                                </div>
                                <span id="justificationValidation" class="text-danger"></span>
                            </div>
                        </div>

                    </div>

                    @*<div class="col-sm-12">
                            <div class="form-group">
                                <label>Send to Next Staff :</label>
                                <div class="panel border border-dark rounded p-2">
                                    <partial name="~/Pages/Shared/Modals/_NewRequisitionSelectApproverPartial.cshtml" model="Model.WfVm" />
                                </div>
                            </div>
                        </div>
                        <div class="d-flex justify-content-around no-print">


                        </div>*@

                    @if (Model.WfVm != null)
                    {
                        <div class="modal fade" id="approverModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
                            <div class="modal-dialog modal-dialog-centered" role="document">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title" id="exampleModalLongTitle">Send to Next Staff :</h5>
                                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                            <span aria-hidden="true">&times;</span>
                                        </button>
                                    </div>
                                    <div class="modal-body">
                                        <partial name="~/Pages/Shared/Modals/_NewRequisitionSelectApproverPartial.cshtml" model="Model.WfVm" />
                                    </div>
                                    <div class="modal-footer justify-content-around">
                                        <input id="btnSubmit" class="btn btn-lg btn-primary justify-content-center" asp-page-handler="Submit" asp-route-id="@((Model.Requisition != null) ? Model.Requisition.Id : (int?)null)" value="Submit" type="submit" placeholder="" />

                                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="d-flex justify-content-around no-print">
                            <input id="btnSave" class="btn btn-lg btn-outline-info float-left" asp-page-handler="Save" value="Save as Draft" asp-route-id="@((Model.Requisition != null) ? Model.Requisition.Id : (int?)null)" type="submit" placeholder="" />
                                
                           
                            <button type="button" class="btn btn-lg btn-primary" data-toggle="modal" data-target="#approverModal">Send to Next Process</button>
                            @if (Model.Requisition != null)
                            {
                                <div class="modal fade" id="quarantineModal" role="dialog" aria-hidden="true">
                                    <div class="modal-dialog modal-lg modal-dialog-centered" role="document">
                                        <div class="modal-content">
                                            <div class="modal-header">
                                                <h5 class="modal-title">Quarantine</h5>
                                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                                    <span aria-hidden="true">&times;</span>
                                                </button>
                                            </div>
                                            <div class="modal-body">
                                                <div class="row">
                                                    <div class="col-sm-12">
                                                        <label>Reason : </label>
                                                        <span class="d-flex flex-row">
                                                            <textarea class="form-control" asp-for="QuarantineRemark"></textarea>
                                                        </span>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="modal-footer justify-content-around">
                                                <input id="btnQuarantine" type="submit" asp-route-id="@Model.Requisition.Id" asp-page-handler="Quarantine" class="btn btn-lg btn-outline-danger" value="Quarantine" />

                                                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <input type="hidden" asp-for="Requisition.Id" />

                                <input data-toggle="modal" data-target="#quarantineModal" class="btn btn-lg btn-primary" value="Quarantine" type="button" placeholder="" />
                            }
                            <button id="printBtn" class="btn btn-lg btn-info" onclick="print(); return false;">Print/Preview</button>
                        </div>

                    }
                </div>
            </div>

        </form>
    </div>
</div>
<div class="modal" id="staffModal">
    <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Staff Details</h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                <div id="grid"></div>
            </div>
            <div id="spinner" class="d-flex justify-content-center">
                <div class="loader">
                </div>
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
<div class="modal" id="vendorModal">
    <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Vendor Details</h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                <div id="Vendorgrid"></div>
            </div>
            <div id="Vendorspinner" class="d-flex justify-content-center">
                <div class="loader">
                </div>
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
<div class="modal" id="requesterModal">
    <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Requester Details</h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                <div id="Requestergrid"></div>
            </div>
            <div id="Requesterspinner" class="d-flex justify-content-center">
                <div class="loader">
                </div>
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<div class="modal" id="uomModal">
    <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Units Of Measurements</h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                <div id="UOMgrid"></div>
            </div>
            <div id="UOMspinner" class="d-flex justify-content-center">
                <div class="loader">
                </div>
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<div class="modal" id="projectModal">
    <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Projects</h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                <div id="projectgrid"></div>
            </div>
            <div id="projectspinner" class="d-flex justify-content-center">
                <div class="loader">
                </div>
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="modItemPreview" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">

        <!--Content-->
        <div class="modal-content">

            <!--Body-->
            <div class="modal-body mb-0 p-0">

                <div class="embed-responsive embed-responsive-4by3">
                    <iframe id="iframeItem" class="embed-responsive-item" src="" allowfullscreen></iframe>
                </div>

            </div>

            <!--Footer-->


        </div>
        <!--/.Content-->

    </div>
</div>

<input type="hidden" id="hiddenURLRank" value="@Url.Action("GetStaffWithRank", "Staff")" />
<input type="hidden" id="hiddenURLNoRank" value="@Url.Action("GetStaffNoRank", "Staff")" />
<input type="hidden" id="uomHiddenURL" value="@Url.Action("GetUOM", "UnitsOfM")" />
<input type="hidden" id="projectHiddenURL" value="@Url.Action("GetProjects", "Project")" />
<input type="hidden" id="requesterHiddenURL" value="@Url.Action("GetRequester", "Requester")" />
<input type="hidden" id="rankHiddenURL" value="@Url.Action("GetRankOfStaff", "Staff")" />
<input type="hidden" id="usercode" value="@Model.UserCode" />
<!--Modal: Name-->


@section Scripts{
    <script src="~/js/fileUpload.js"></script>
    <script src="~/js/quill.js"></script>

    <script>
        designationDivDisplay();

        function deleteAttachment(index) {
            $('.attachexist.' + index).hide('slow', function () { $(this).remove() });
            $('.attachnoexist.' + index).removeAttr('hidden');
            $('.attachnoexist.' + index).show(200);

        }

        function requiredValidation(e) {

            var jempty = $("#Requisition_Purpose").val() == false;
            var rempty = $("#remarkInput").val() == false;

            if (jempty || rempty) {
                if (jempty) {
                    $("#justificationValidation").text("This field is required.");
                    $("#Requisition_Purpose").focus();
                } else {
                    $("#justificationValidation").text("");
                }
                if (rempty) {
                    $("#remarkValidation").text("This field is required.");
                    $("#remarkInput").focus();
                } else {
                    $("#remarkValidation").text("");
                }

                e.preventDefault();
                return false;
            } else {
                $("#justificationValidation").text("");
                $("#remarkValidation").text("");
            }
        }
        
        //fils the prepared by fields
        (function () {
            var userCode = $('#userCodeInput').val();
            var Url = window.location.origin + "/api/PRNumberData/" + userCode;
            $.ajax({
                url: Url,
                success: function (result) {
                    if ($(".prnumberInput").val() == '')
                    { $(".prnumberInput").val(result['prnumber']); }

                    if ($(".requesterCode").val() == '')
                    { $(".requesterCode").val(result['requestDeptCode']); }

                    if ($(".requesterValue").val() == '')
                    { $(".requesterValue").val(result['requestDept']); }

                    var curDept = $('.departmentInput').attr('curDept');

                    var options = "";

                    for (var i = 0; i < result['departments'].length; i++) {
                        var item = result['departments'][i];

                        if (curDept == item) {
                            options += `<option selected value="${item}">${item}</option>`;
                        } else {
                            options += `<option value="${item}">${item}</option>`;
                        }
                    }

                    $('.departmentInput').html(options);
                    
                },
                error: function (error) {
                    console.log(error);
                }

            })

        })();

        //fils the prepared by fields
        (function () {
            var usercode = $('#usercode').val();
            var name;
            var rank;
            var Url = window.location.origin + "/api/Codes/Staff/" + usercode;
            $.ajax({
                url: Url,
                success: function (result) {
                    name = result['name'];
                    var nUrl = window.location.origin + "/api/Users/GetStaffRank/" + usercode;
                    $.ajax({
                        url: nUrl,
                        success: function (result) {
                            rank = result;

                            $('#txtprepared').val(name);
                            $('#txtpreparedRank').val(rank);
                        }
                    })
                },
                error: function (error) {
                    console.log(error);
                }

            })

        })();

        ////print documents
        //$('#printBtn').on('click', function (e) {
        //    e.preventDefault();
        //    print();
        //})

        // file input changes, set preview button src attribute
        $(".container-fluid").on('change', '.fileItem', function () {
            var index = $(this).data('attachment');
            readURL(this, index);
        });
        function readURL(input, id) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    var previewBtn = $(`button[data-preview=${id}]`);
                    previewBtn.removeAttr('hidden');
                    previewBtn.attr('src', e.target.result)
                    var removeBtn = $(`button[data-remove=${id}]`);
                    removeBtn.removeAttr('hidden');
                }

                reader.readAsDataURL(input.files[0]);
            }
        }

        //attachment preview button
        $('#requisitionBody').on('click', '.btnPreviewItemAttachment', function (e) {
            var url = $(this).attr('src');
            displayPhotos(url);
            e.preventDefault();
        });

        //remove attachment button
        $('#requisitionBody').on('click', '.btnRemoveFile', function (e) {
            var id = $(this).attr('data-remove');
            $(`input[data-attachment=${id}]`).val('');

            $(`button[data-preview=${id}]`).prop("hidden", true);
            $(`button[data-remove=${id}]`).prop("hidden", true);

            e.preventDefault();
        });
        function displayPhotos(url) {

            $('#iframeItem').attr('src', url);
            $('#modItemPreview').modal();
        }



        ////loads vendor modal
        //$(function () {
        //    $('.loadVendorModal').on('click', function () {
        //        $('#vendorModal').modal("show");

        //        //get supplier name textbox
        //        var txtToAssign = $('.' + $(this).attr('inputclass') + '');
        //        $('#Vendorgrid').load(this.baseURI + '?handler=VendorPartial', function () {
        //            $('#Vendorspinner').removeClass('d-flex');
        //            $('#Vendorspinner').hide();
        //            $('#vendorTable').dataTable();

        //            $('.btnVendorName').on('click', function () {
        //                //assign staff name textbox
        //                txtToAssign.val($(this).val());


        //                $('#staffModal').modal("hide");
        //                return false;
        //            });
        //        });

        //        return false;

        //    });
        //});

        //loads Requester modal
        $(function () {
            $('#btnRequester').on('click', function () {
                $('#requesterModal').modal("show");

                var type = $("input[name='Requisition.RequesterType']:checked").val();

                var url = $('#requesterHiddenURL').val();
                $('#Requestergrid').load(url + "?type=" + type, function () {
                    $('#Requesterspinner').removeClass('d-flex');
                    $('#Requesterspinner').hide();
                    $('#RequesterTable').dataTable();

                    $('#RequesterTable').on('click', '.btnRequesterName', function () {

                        $('.requesterCode').val($(this).val());
                        $('.requesterValue').val($(this).attr("rname"));

                        $('#requesterModal').modal("hide");
                        return false;
                    });
                });

                return false;

            });
        });

        //PreparedForType check changes
        $(function () {
            $('.btnPreparedForType').on('change', function () {

                $('#forStaffTextRank').val('');
                $('#forStaffText').val('');

                designationDivDisplay();
            });
        });

        function designationDivDisplay() {
            var preparedFor = $("input[name='Requisition.PreparedForType']:checked").val();

            if (preparedFor === 'Staff') {
                $('#designationDiv').show(500);
            } else {
                $('#designationDiv').hide(500);
            }
        }

        //to load staff modal
        $(function () {
            $('.loadStaffModal').on('click', function () {
                //get staff name textbox
                var txtToAssign = $('#' + $(this).val() + '');
                //get staff rank textbox
                var txtRankToAssign = $('#' + $(this).val() + 'Rank');

                var preparedFor = $("input[name='Requisition.PreparedForType']:checked").val();

                if ($(this).val() === 'forStaffText' && preparedFor === 'Project') {
                    $('#projectgrid').empty();
                    $('#projectspinner').addClass('d-flex');
                    $('#projectspinner').show();
                    $('#projectModal').modal("show");

                    var url = $('#projectHiddenURL').val();
                    $('#projectgrid').load(url, function () {
                        $('#projectspinner').removeClass('d-flex');
                        $('#projectspinner').hide();
                        $('#projectTable').dataTable();

                        $('#projectTable').on('click', '.btnProjectName', function () {
                            //assign unit of measurement name textbox
                            txtToAssign.val($(this).attr('itemName'));

                            $('#projectModal').modal("hide");
                            return false;
                        });
                    });
                    return false;
                } else {
                    $('#grid').empty();
                    $('#spinner').addClass('d-flex');
                    $('#spinner').show();
                    $('#staffModal').modal("show");

                    var url = $('#hiddenURLRank').val();
                    $('#grid').load(url, function () {
                        $('#spinner').removeClass('d-flex');
                        $('#spinner').hide();
                        $('#staffTable').dataTable();

                        $('#staffTable').on('click', '.btnStaffName', function () {
                            //assign staff name textbox
                            txtToAssign.val($(this).val());
                            var staffCode = $(this).text();
                            var rankURL = window.location.origin + "/api/Users/GetStaffRank/" + staffCode;

                            $.ajax({
                                url: rankURL,

                            }).done(function (data) {
                                //assign rank to rank textbox
                                txtRankToAssign.val(data);
                            });

                            //$('#forStaffText').val();
                            $('#staffModal').modal("hide");
                            return false;
                        });
                    });

                    return false;
                }
            });
        });

        //loads unit of measurement modal
        $(function () {
            $('#requisitionBody').on('click', '.loadUOMModal', function () {
                $('#UOMgrid').empty();
                $('#UOMspinner').addClass('d-flex');
                $('#UOMspinner').show();
                $('#uomModal').modal("show");

                //get unit name textbox
                var value = $(this).val();
                var txtToAssign = $('input[data-value="' + value + '"]');

                var url = $('#uomHiddenURL').val();
                $('#UOMgrid').load(url, function () {
                    $('#UOMspinner').removeClass('d-flex');
                    $('#UOMspinner').hide();
                    $('#uomTable').dataTable();

                    $('#uomTable').on('click', '.btnUOMName', function () {
                        //assign unit of measurement name textbox
                        txtToAssign.val($(this).attr('itemName'));

                        $('#uomModal').modal("hide");
                        return false;
                    });
                });
                return false;
            });
        });


        //to create a custom memo field/ textbox
        var quill = new Quill('#editor', {
            theme: 'snow'
        });

        //post value of quill editor
        $(function () {
            $('#btnSave').on('click', function () {
                var purpose = $('#Requisition_Purpose');
                purpose.val(quill.getText());
            });

            $('#btnSubmit').on('click', function () {
                var purpose = $('#Requisition_Purpose');
                purpose.val(quill.getText());
                requiredValidation(event);
            })
        });

        //sets value of quill editor
        $(document).ready(function () {
            var purpose = $('#Requisition_Purpose');
            quill.setText(purpose.val());
        });

        //to attach multiple files in preview mode
        //var upload = new FileUploadWithPreview('myUniqueUploadId');


        //add new items to grid
        $('#btnMore').on('click', function (event) {
            event.preventDefault;
            var lastIndex = $('#lastIndex').val();
            var newIndex = Number(lastIndex) + 1;

            newStepRow(newIndex);
            $('#lastIndex').val(newIndex);
            return false;
        });


        //delete row
        $(function () {
            $('#requisitionBody').on('click', '.del', function () {
                //get row id
                var curRowId = $(this).attr("delRow");

                var reqId = $(this).attr("reqId");

                //checks if its an already saved item
                if (reqId) {
                    $.ajax({
                        url: window.location.origin  + '/api/Requisition/DeleteItem/' + reqId.trim(),
                        type: 'delete',
                        xhrFields: {
                            withCredentials: true
                        },
                        contentType: 'application/json',
                        error: function () {
                            alert('An Error occured while deleting item. Contact Admin...');
                            return false;
                        },
                        success: function () {
                            $('.row' + curRowId).remove();
                            return false;
                        },
                    });
                } else {
                    $('.row' + curRowId).remove();
                        return false;
                }
                
            });
        });


        function newStepRow(index) {
            var html =`<tr class="row${index}">
                                            <td>
                                                <input type="hidden" value="${index}" name="gridVm.Index">
                                                <input type="text" required="" id="gridVm_${index}__RequisitionItem_Description" name="gridVm[${index}].RequisitionItem.Description" value="">
                                            </td>
                                            <td>
                                                <input type="number" required="" oninput="this.value=this.value.replace(/[^0-9]/g,'');" data-val="true" data-val-required="The Quantity field is required." id="gridVm_${index}__RequisitionItem_Quantity" name="gridVm[${index}].RequisitionItem.Quantity" value="">

                                            </td>
                                            <td>
                                                <div class="d-flex flex-row">
                                                    <input type="text" readonly="" required="" data-value="forUOM ${index}" id="gridVm_${index}__RequisitionItem_UnitOfMeasurement" name="gridVm[${index}].RequisitionItem.UnitOfMeasurement" value="">

                                                    <button class="btn loadUOMModal ml-1" value="forUOM ${index}" data-toggle="modal" data-target="#uomModal"><i class="fa fa-search"></i></button>
                                                </div>
                                            </td>
                                            <td>
                                                <div class="d-flex flex-row">
                                                    <input data-attachment="${index}" accept=".pdf" class="fileItem" type="file" id="gridVm_${index}__Attachment" name="gridVm[${index}].Attachment">
                                                    <button data-preview="${index}" hidden="" class="btnPreviewItemAttachment">Preview</button>
                                                    <button data-remove="${index}" hidden="" class="btnRemoveFile btn btn-outline-danger"><i class="fa fa-times"></i></button>
                                                </div>
                                            </td>
                                            <td>
                                                <label class="del" delrow="${index}">
                                                    <i class="fa fa-trash-alt"></i>
                                                </label>
                                            </td>

                                        </tr>`;
            $('#requisitionBody').append(html);
        }
    </script>

}