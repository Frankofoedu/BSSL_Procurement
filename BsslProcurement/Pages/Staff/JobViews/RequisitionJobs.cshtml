@page
@using DcProcurement;
@model BsslProcurement.RequisitionJobsModel
@{
    ViewData["Title"] = "RequisitionJobs";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

<div class="row mt-5">
    <div class="col-md-1"></div>
    <div class="col-md-11">
        <form method="post" class="panel panel-login">
            <div class="panel-heading">
                <div class="row">
                    <p class="header-text">Requisition Tasks</p>
                </div>
                <hr>
            </div>
            <div asp-validation-summary="All" class="text-danger"></div>

            @if (!string.IsNullOrWhiteSpace(Model.Message))
            {
                <div class="alert alert-success alert-dismissable fade show">
                    <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    @Model.Message
                </div>
            }
            @if (!string.IsNullOrWhiteSpace(Model.Error))
            {
                <div class="alert alert-danger alert-dismissable fade show">
                    <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    @Model.Error
                </div>
            }


            @*<button class="btn btn-primary pt-2" asp-page="NewRequisition">Add New</button>*@

            @*<a asp-page="NewRequisition" role="button" class="btn btn-primary">New Requisition</a>*@

            <div class="row pt-3 " style="">
                <div class="col-12 table-responsive table-responsive-sm">
                    <table class="table  table-striped">
                        <thead>
                            <tr class="table-primary">
                                <th>S/N</th>
                                <th>Job Action Type</th>
                                <th>Count</th>
                                <th>Action</th>
                            </tr>
                        </thead>


                        <tbody>

                            @if (Model.RequisitionJobs.Any())
                            {
                                @for (int i = 0; i < Model.RequisitionJobs.Count(); i++)
                                {
                                    var group = Model.RequisitionJobs.ElementAt(i);
                                    var groupCount = group.Count();
                                    var groupAction = group.First().Workflow.WorkflowAction;
                                    var groupName = groupAction.Name;
                                    var groupActionId = groupAction.Id;
                                    <tr>
                                        <td>@(i + 1).</td>
                                        <td>@groupName Jobs</td>
                                        <td>@groupCount</td>
                                        <td>@{await RenderLink(groupActionId);}</td>
                                    </tr>
                                }
                            }
                        </tbody>
                        <tfoot>
                        </tfoot>
                    </table>
                </div>
            </div>
        </form>
    </div>
</div>

@functions{
   async Task  RenderLink(int id)
    {
        switch (id)
        {
            case Constants.ProcurementCostingActionId:                
               <a asp-page="../Itemrequisition/ItemPricing/AllRequisitionItemPricing" style="color: #007bff">View</a>
                break;
            case Constants.ApproverActionId:
                <a asp-page="../Itemrequisition/ProcApproval/AllRequisition" style="color: #007bff">View</a>
                 break;
            case Constants.AuthorizerActionId:
                <a asp-page="../Itemrequisition/ProcCommencement/AllRequisition" style="color: #007bff">View</a>
                break;
            case Constants.ApproveRaiseERFxActionId:
                <a asp-page="../Itemrequisition/" style="color: #007bff">View</a>
                break;
            case Constants.RaiseERFxActionId:
                <a asp-page="../Itemrequisition/BidPreparation/ClearedRequisitions"  style="color: #007bff">View</a>
                break;
            default:
                break;
        }

    }
}